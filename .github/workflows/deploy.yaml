name: Test, build and deploy Vank Api

on:
  push:
    branches:
      - main

jobs:
  build_and_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test
      - name: Run audit
        run: npm audit
      - name: Build App
        run : npm run build
  build_and_upload_image:
    needs: build_and_check
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.API_IMAGE_NAME }}:${{ secrets.API_IMAGE_TAG }}
  deploy_image:
    needs: build_and_upload_image
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ${{ secrets.NODE_ENV }}
      INVOICE_FILE_URL: ${{ secrets.INVOICE_FILE_URL }}
      CURRENCY_CONVERTER_URL: ${{ secrets.CURRENCY_CONVERTER_URL }}
      FREE_CURRENCY_API_KEY: ${{ secrets.FREE_CURRENCY_API_KEY }}
      API_VERSION: ${{ secrets.API_VERSION }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      API_IMAGE_REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
      API_IMAGE_NAME: ${{ secrets.API_IMAGE_NAME }}
      API_IMAGE_TAG: ${{ secrets.API_IMAGE_TAG }}
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: replace
      - uses: actions/checkout@v2
      - name: Init docker swarm
        run: bash init_swarm.sh
      - name: Create docker context
        run: docker context create --docker "host=ssh://sergio@contabonode1.lalvarez.dev" contabo
      - name: Use docker context
        run: docker context use contabo
      - name: Compile docker-compose.yaml
        run: docker-compose -f base.compose.yml -f prod.compose.yml config > docker-compose.yaml
      - name: echo result
        run: cat docker-compose.yaml
      - name: Deploy Api image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.API_IMAGE_NAME }}:${{ secrets.API_IMAGE_TAG }}
      - name: Deploy stack
        run: docker stack deploy vank -c docker-compose.yaml
      - name: Force update Api
        run: docker service update --force vank_api
